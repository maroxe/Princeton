# -*- mode: org; org-confirm-babel-evaluate: nil; org-speed-commands-user: nil; org-use-speed-commands: t; -*-

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../../css/special-block.css" />
#+HTML_HEAD: <link href="http://thomasf.github.io/solarized-css/solarized-dark.min.css" rel="stylesheet"></link>
#+HTML_HEAD: <script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>
#+HTML_HEAD: <script src="http://127.0.0.1:60000/autoreload.js"></script>

#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+OPTIONS: toc:nil h:2

#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode )


#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}

#+LATEX_HEADER:  \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{amsfonts}

#+LATEX_HEADER: \newcommand{\Problem}[1]{\subsection*{Problem #1}}
#+LATEX_HEADER: \newcommand{\Q}[1]{\subsubsection*{Q.#1}}
#+LATEX_HEADER: \newcommand{\union}[1]{\underset{#1}{\cup} }
#+LATEX_HEADER: \newcommand{\bigunion}[1]{\underset{#1}{\bigcup} \, }
#+LATEX_HEADER: \newcommand{\inter}[1]{\underset{#1}{\cap} }
#+LATEX_HEADER: \newcommand{\biginter}[1]{\underset{#1}{\bigcap} }
#+LATEX_HEADER: \newcommand{\minimize}[3]{\optimize{#1}{#2}{#3}{min}}
#+LATEX_HEADER: \newcommand{\maximize}[3]{\optimize{#1}{#2}{#3}{max}}
#+LATEX_HEADER: \DeclareMathOperator{\cov}{cov}
#+LATEX_HEADER: \DeclareMathOperator{\var}{var}


#+TITLE: Problem set 3, ORF523
#+DATE: <2016-02-23 Tue>
#+AUTHOR: Bachir El khadir

#+name: Watch changes
#+BEGIN_HTML 
@@html:<script>@@
@@html:AutoReload.Watch('localhost:60000');@@
@@html:</script>@@
#+END_HTML

#+BEGIN_SRC emacs-lisp :exports none
(defun add-caption-header-and-center (caption header )
  (concat (format "org\n#+attr_html: :class center\n#+caption: %s\n%s" caption header)))

  (defun add-caption-and-center (caption)
    (concat (format "org\n#+attr_html: :class center\n#+caption: %s" caption)))

#+END_SRC

